apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysite-nginx
  labels:
    app: mysite-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mysite-nginx
  template:
    metadata:
      labels:
        app: mysite-nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: mysite-nginx-service
spec:
  selector:
    app: mysite-nginx
  ports:
    - protocol: TCP
      port: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: protected-nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://login-flask-service.default.svc.cluster.local/verify
    nginx.ingress.kubernetes.io/auth-signin: /login
    nginx.ingress.kubernetes.io/affinity: "cookie"
spec:
  tls:
    - hosts:
        - kubernetes.docker.internal
      secretName: tls-secret
  ingressClassName: nginx
  rules:
    - host: kubernetes.docker.internal
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: login-flask-service
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unprotected-nginx
  annotations:
    # nginx.ingress.kubernetes.io/affinity: "cookie"
spec:
  tls:
    - hosts:
        - kubernetes.docker.internal
      secretName: tls-secret
  ingressClassName: nginx
  rules:
    - host: kubernetes.docker.internal
      http:
        paths:
          - path: /login
            pathType: Prefix
            backend:
              service:
                name: login-flask-service
                port:
                  number: 80
          - path: /signup
            pathType: Prefix
            backend:
              service:
                name: login-flask-service
                port:
                  number: 80