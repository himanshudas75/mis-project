apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: protected-nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://login-flask-service.default.svc.cluster.local/verify
    nginx.ingress.kubernetes.io/auth-signin: /login
    nginx.ingress.kubernetes.io/affinity: "cookie"
spec:
  tls:
    - hosts:
        - kubernetes.docker.internal
      secretName: tls-secret
  ingressClassName: nginx
  rules:
    - host: kubernetes.docker.internal
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: login-flask-service
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unprotected-nginx
  annotations:
    # nginx.ingress.kubernetes.io/affinity: "cookie"
spec:
  tls:
    - hosts:
        - kubernetes.docker.internal
      secretName: tls-secret
  ingressClassName: nginx
  rules:
    - host: kubernetes.docker.internal
      http:
        paths:
          - path: /login
            pathType: Exact
            backend:
              service:
                name: login-flask-service
                port:
                  number: 80
          - path: /signup
            pathType: Exact
            backend:
              service:
                name: login-flask-service
                port:
                  number: 80
          - path: /static
            pathType: Prefix
            backend:
              service:
                name: login-flask-service
                port:
                  number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLekNDQWhPZ0F3SUJBZ0lVRkxQZWRseklKZUZoZjhjdnNaekFCbU84R3Zvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0pURWpNQ0VHQTFVRUF3d2FhM1ZpWlhKdVpYUmxjeTVrYjJOclpYSXVhVzUwWlhKdVlXd3dIaGNOTWpNeApNVEV6TVRJd05UQTRXaGNOTWpReE1URXlNVEl3TlRBNFdqQWxNU013SVFZRFZRUUREQnByZFdKbGNtNWxkR1Z6CkxtUnZZMnRsY2k1cGJuUmxjbTVoYkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUpZUEZ6bGxMdURHL1BrQnRXdENuSk9zcU5LR1k2aFp0K1VDeDZudmM0cDVEbDBVc0dtRkdYV0JCcGUybVRWdApxMnpOeG1TcGdwcU5uNGtKSWl0T3BJNXdKUlVJYmtDL3dGQTc5ZGdwc0VqOW9uZWZPQmxSdk1ZTGtFOVo4T3k3CnEzZ01TY0RJWVFOdmJMNjRmS1J4RWM3cktuU1N2dER3dkJKbGZqelhIY0ZyNWh4TzNBV1NVUkhOeE8xcDFuUHgKTDRVeVk3V09QYXFKY1VXNEtuOVFlQk85RHgweVR4cW1SRDRaUGpsQ2dUWFZEYlpZSkZJdUliWkcrQnluVXB1eQpyMW10a2VyWE9QS3NyQ1k3UWd2MC9TZnp4VWhyM2Q1VVJnY0lQZUFjNkJvV29iTTlndlhOUDdXaWlXSE42OEM5CkZyVjFVV1o2cFRPWEcvUFFBRWFnei84Q0F3RUFBYU5UTUZFd0hRWURWUjBPQkJZRUZFMnFmbFg4bGlJN2NrL2QKeXFpSmc5VzVjK2FyTUI4R0ExVWRJd1FZTUJhQUZFMnFmbFg4bGlJN2NrL2R5cWlKZzlXNWMrYXJNQThHQTFVZApFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUl1cjNRTFBmbjAzVE1kN2JnOHFrVzF4Cm41eVFvQmdxUFVsWmhxN2tjcnVQb0k4M3VZSWlXeU5pc3ZTcjhjSVFyMlpYbmlOTlVXSUhBZHZvR1YwTU1YUWMKcEJBR2p3MzI5SGNDNXdNYWpDb1VEUkRqUEttNmxIVFdsczBLbjJsUmEyVk9sTHpnUDFLSm5udzI1aUJSb0ozagp1MFZFa1E3UXY5SUR5Z0tIRGZvU1FKRXRUbXV2cG1pV0hNQy9ZWWpmZnhDK3RrcndQYWpzaHU2WEFxZG0rbkpzCnJQTWxndkx3enRPZForYW5pZE9RMUo1RTFZN3dHQ3kxZTBNSHYyT2FXUTBscUV6T3k5MzhmcUoyQzk5T3RYdGYKZDJZSlRKS2FGQXp5YktPSGhHeGN2eTl1ZG8vM0tSTktTMFBYRGF3eHVqMkhzTW1tNk5WU1dWTzlyMTBtZzhZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ1dEeGM1WlM3Z3h2ejUKQWJWclFweVRyS2pTaG1Pb1diZmxBc2VwNzNPS2VRNWRGTEJwaFJsMWdRYVh0cGsxYmF0c3pjWmtxWUthalorSgpDU0lyVHFTT2NDVVZDRzVBdjhCUU8vWFlLYkJJL2FKM256Z1pVYnpHQzVCUFdmRHN1NnQ0REVuQXlHRURiMnkrCnVIeWtjUkhPNnlwMGtyN1E4THdTWlg0ODF4M0JhK1ljVHR3RmtsRVJ6Y1R0YWRaejhTK0ZNbU8xamoycWlYRkYKdUNwL1VIZ1R2UThkTWs4YXBrUStHVDQ1UW9FMTFRMjJXQ1JTTGlHMlJ2Z2NwMUtic3E5WnJaSHExemp5ckt3bQpPMElMOVAwbjg4VklhOTNlVkVZSENEM2dIT2dhRnFHelBZTDF6VCsxb29saHpldkF2UmExZFZGbWVxVXpseHZ6CjBBQkdvTS8vQWdNQkFBRUNnZ0VBSnMvNmFzOEFCQVdUOHZmOUs2UU1DYW96OUZmc09PUVR5M2tmbVpXa3BlRlAKMU1XQUo1clVqZTcwZkpNdko0R1pRRWd0RTJaQXNLY0c1NVBrTVoxaXRMRE85cFM2cDZheElFK1I4L284YlhTawo3Qm5Ua2NEeGVhd09CR2c0QjVNMjg1TUNGSW4vaGJyeFBwZExMZUZOQU44VW1SaEhvSlZUbjlKK2gxQUFrMEZtCjErMVV1N0FYY3hkMDRrQWRjc1l6amxOMmZkRXkzSCtMVERxYU0waXZ4eTBhNXQzSUc2TjBRMVdtWXpsTEh3NXkKaDRNa0VZekdZM0Nsbm03Sy9ZeFdDNWlCeU5vWlRHL1ZkK0pmK0pvQUEwOExSZi9LcVRmdndpcFdoMFVLUTRsWgo0MFBYTkYxNHcvU2RlYWwwalNSeUJHQkpCWDZvNElyU0N5MGl0b0VkUVFLQmdRREhyZitScGlPZEhjZ1I0c0FnCkNKQ0pYcnNXTVEyOXhUaU14UVZpMjIzaWpOZnlVU216WlNKbnlDYXo4NnRjd1UzVTJiUURaMjJsbVRxeEJ2UzMKdkNUSWZiZ1RRSFVJQ1dmb3dSNmJxam51dkt4bmtmNWp5S1BLV2hLZVJsaExzQTRlZ1IwSGhwaFFTanJ6alVLNQpMbFhmLzNndEZBbU1nSkVQcFhTV29keTdvUUtCZ1FEQVlqSHI3Q0RzZW9LWW9jNnNMb1UwOHowU0pXQjh5Z3pVClVRR3l3VjNaTzV5TFpGaDhKMlM0dTFRMkUvL0VMQ0pRZjJkNEFIaXdiTDRYaHJlc1IvZVFZbGl5UjYwa1N1c2QKKzY5THhKc3lPTm5sT2JKQ0ZjVmV1UTRVS3FMay9NWUdpQnZTMUNBbkJSeFM0Sml5SWVmaUkvSExSRXV5aXoragp2TWhrbHZybm53S0JnQXpFSlJqTXhHNGhIMDkxYmM4ZWZROHJUVTdINkJiLzZ2T2xEUWthK2xXSHA2N0lYYUFvCmtTQ05mVnYzOGpiRjdSSDBzVHVlZXpZaEs4MXhvbWUwMGEwM3pITCtwZnpUalI4bWFheU9INUlSNGZ2bEs1eDUKa1c4NGZ3UTdmeDJucmQ5cFpjKzdYVFdVNlZ2MDVoVXN6elM1QXBmdk5nVVRtektpNDJkV0JlVEJBb0dBR2RhVwpZZHRLNkxmamhtQmxBNWNUNlBLcVJ4K2gvK0NiTElEY3U0ZGc5V1llTmxKNTErTHFraTBHdUdTak8xTzZJQm1jCmFlK1dSZ3UwMURBUnh4KzdUamNITnBxTjFJd0RXL21McDU5MlFKNkdGVlZVYmEvQzNGLzZWaGNMM2JsZFYwODgKZldwa0R4bU9ua3J2OXl5Nm1oSzl6TkVWWVp0MkpxV2FQSGhTcG4wQ2dZRUFpdDhka1VsNmFzRk9WTW5pVHh4YQptSStSV1A2ZmhicHFlbGN6QXJwSEthOHJ1QjVHRzZrbytxTm1qaDE5R3kzMjZFTnBmOFNZb25zTExZS3dqREU5CllEanA2c1RDeHRCc2NoZlpCU0RSMWpwQlpZTTRYMG8vcmpudVJjTlhiMHUzK0l5MWRFOStTdk9QdmtLRS8wWi8KdHdBL21VemgxOEtDNUZpQ1FYODREek09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
